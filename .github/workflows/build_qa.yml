name: QA 빌드
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.issue.number || github.ref }}
  cancel-in-progress: true
on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      bucket_name:
        required: true
        type: string
      deploy_url:
        required: true
        type: string
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true
      KEY_STORE_FILE:
        required: true
      SIGNING_NAME:
        required: true
      SIGNING_PASSWORD:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  get-pr:
    runs-on: ubuntu-latest
    outputs:
      head_sha: ${{ steps.get_head_sha.outputs.head_sha }}
      branch_name: ${{ steps.get_branch_name.outputs.branch_name }}
    steps:
      - name: PR 가져오기
        id: get_pr
        uses: octokit/request-action@dad4362715b7fb2ddedf9772c8670824af564f0d # 2.4.0
        with:
          route: GET /repos/{repository}/pulls/{pr_number}
          repository: ${{ github.repository }}
          pr_number: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: PR의 head_sha 가져오기
        id: get_head_sha
        run: echo "head_sha=$(echo ${{ fromJson(steps.get_pr.outputs.data).head.sha }})" >> $GITHUB_OUTPUT
      - name: PR의 branch_name 가져오기
        id: get_branch_name
        run: echo "branch_name=$(echo ${{ fromJson(steps.get_pr.outputs.data).head.ref }})" >> $GITHUB_OUTPUT
  create-check-run:
    runs-on: ubuntu-latest
    needs: get-pr
    outputs:
      check_run_id: ${{ fromJson(steps.create_check_run.outputs.data).id }}
    steps:
      - name: Check Run 생성
        uses: octokit/request-action@dad4362715b7fb2ddedf9772c8670824af564f0d # 2.4.0
        id: create_check_run
        with:
          route: POST /repos/{repository}/check-runs
          repository: ${{ github.repository }}
          name: "build-qa"
          head_sha: ${{ needs.get-pr.outputs.head_sha }}
          status: "in_progress"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: Android # self-hosted runner
    needs: create-check-run
    steps:
      - uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.issue.number }}/merge
          submodules: true
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Decode KeyStore File
        id: decode_key_store_file
        env:
          KEY_STORE_FILE: ${{ secrets.KEY_STORE_FILE }}
        run: |
          KEY_STORE_FILE_PATH=$(echo $RUNNER_TEMP/keystore)
          echo "key_store_file_path=$KEY_STORE_FILE_PATH" >> "$GITHUB_OUTPUT"

          echo $KEY_STORE_FILE | base64 --decode > $KEY_STORE_FILE_PATH
      - name: Build with Gradle
        # 현재 위치: runner/_work/repo_name/repo_name
        # gradle user home 위치: runner/.gradle
        run: ./gradlew clean :app:assembleQa :app:assembleQb checkQaUnitTest --gradle-user-home "../../../.gradle"
        env:
          HEY_DEALER_SIGNING_PATH: ${{ steps.decode_key_store_file.outputs.key_store_file_path }}
          HEY_DEALER_SIGNING_NAME: ${{ secrets.SIGNING_NAME }}
          HEY_DEALER_SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          HEY_DEALER_FOR_DEALER_SIGNING_PATH: ${{ steps.decode_key_store_file.outputs.key_store_file_path }}
          HEY_DEALER_FOR_DEALER_SIGNING_NAME: ${{ secrets.SIGNING_NAME }}
          HEY_DEALER_FOR_DEALER_SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          BRANCH_NAME: ${{ github.ref }}
      - name: Copy to files directory
        run: |
          mkdir -p app/build/files
          find app/build/outputs/ -type f \( -name "*.apk" -o -name "*.aab" \) -exec cp {} app/build/files/ \;
      - name: Upload Files (temp directory)
        uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ inputs.bucket_name }}
          source_dir: "app/build/files"
          destination_dir: "tmp/${{ github.repository }}/refs/pull/${{ github.event.issue.number }}/merge"


  move_s3_qa:
    needs: [ get-pr, build-qa ]
    uses: ./.github/workflows/move_s3_qa.yml
    with:
      app_name: ${{ inputs.app_name }}
      bucket_name: ${{ inputs.bucket_name }}
      branch_name: ${{ needs.get-pr.outputs.branch_name }}
      ref: refs/pull/${{ github.event.issue.number }}/merge
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  output_path_comment:
    needs: move_s3_qa
    uses: ./.github/workflows/output_path_comment.yml
    with:
      build_type: qa
      user_name: ${{ github.event.comment.user.login }}
      pr_number: ${{ github.event.issue.number }}
      output_url: ${{ inputs.deploy_url }}/#${{ needs.move_s3_qa.outputs.path }}
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  update-check-run:
    runs-on: ubuntu-latest
    needs: [ create-check-run, build-qa, move_s3_qa ]
    if: always()
    steps:
      - name: Check Run 동기화
        uses: octokit/request-action@dad4362715b7fb2ddedf9772c8670824af564f0d # 2.4.0
        with:
          route: PATCH /repos/{repository}/check-runs/{check_run_id}
          repository: ${{ github.repository }}
          check_run_id: ${{ needs.create-check-run.outputs.check_run_id }}
          conclusion: ${{ needs.build-qa.result }}
          status: "completed"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

