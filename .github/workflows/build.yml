name: 빌드
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.issue.number || github.ref }}
  cancel-in-progress: true
on:
  workflow_call:
    inputs:
      build_type:
        required: true
        type: string
      ref:
        type: string
        default: ${{ github.ref }}
      bucket_name:
        required: false
        type: string
      extra_task:
        required: false
        type: string
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true
      KEY_STORE_FILE:
        required: true
      SIGNING_NAME:
        required: true
      SIGNING_PASSWORD:
        required: true
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
jobs:
  check-skip:
    uses: ./.github/workflows/check_skip.yml
  build:
    runs-on: Android # self-hosted runner
    needs: check-skip
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          submodules: true
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Decode KeyStore File
        id: decode_key_store_file
        env:
          KEY_STORE_FILE: ${{ secrets.KEY_STORE_FILE }}
        run: |
          KEY_STORE_FILE_PATH=$(echo $RUNNER_TEMP/keystore)
          echo "key_store_file_path=$KEY_STORE_FILE_PATH" >> "$GITHUB_OUTPUT"

          echo $KEY_STORE_FILE | base64 --decode > $KEY_STORE_FILE_PATH
      - name: Build with Gradle
        # 현재 위치: runner/_work/repo_name/repo_name
        # gradle user home 위치: runner/.gradle
        run: |
          case "${{ inputs.build_type }}" in
          qa)
             ./gradlew clean assembleQa assembleQb checkQaUnitTest --gradle-user-home "../../../.gradle"
            ;;
          release)
             ./gradlew clean assembleRelease checkReleaseUnitTest --gradle-user-home "../../../.gradle"
             ./gradlew bundleRelease --gradle-user-home "../../../.gradle"
            ;;
          *)
             ./gradlew clean assembleDebug checkDebugUnitTest  --gradle-user-home "../../../.gradle"
            ;;
          esac
        env:
          HEY_DEALER_SIGNING_PATH: ${{ steps.decode_key_store_file.outputs.key_store_file_path }}
          HEY_DEALER_SIGNING_NAME: ${{ secrets.SIGNING_NAME }}
          HEY_DEALER_SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          HEY_DEALER_FOR_DEALER_SIGNING_PATH: ${{ steps.decode_key_store_file.outputs.key_store_file_path }}
          HEY_DEALER_FOR_DEALER_SIGNING_NAME: ${{ secrets.SIGNING_NAME }}
          HEY_DEALER_FOR_DEALER_SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
      - name: Extra gradle task
        if: inputs.extra_task != ''
        run: |
          ./gradlew ${{ inputs.extra_task }} --gradle-user-home "../../../.gradle"
        env:
          HEY_DEALER_SIGNING_PATH: ${{ steps.decode_key_store_file.outputs.key_store_file_path }}
          HEY_DEALER_SIGNING_NAME: ${{ secrets.SIGNING_NAME }}
          HEY_DEALER_SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          HEY_DEALER_FOR_DEALER_SIGNING_PATH: ${{ steps.decode_key_store_file.outputs.key_store_file_path }}
          HEY_DEALER_FOR_DEALER_SIGNING_NAME: ${{ secrets.SIGNING_NAME }}
          HEY_DEALER_FOR_DEALER_SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
      - name: Copy to files directory
        if:  inputs.bucket_name != '' && ( inputs.build_type == 'qa' || inputs.build_type == 'release' )
        run: |
          mkdir -p app/build/files
          find app/build/outputs/ -type f \( -name "*.apk" -o -name "*.aab" \) -exec cp {} app/build/files/ \;
      - name: Upload Files (temp directory)
        if:  inputs.bucket_name != '' && ( inputs.build_type == 'qa' || inputs.build_type == 'release' )
        uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ inputs.bucket_name }}
          source_dir: "app/build/files"
          destination_dir: "tmp/${{ github.repository }}/${{ inputs.ref }}"
